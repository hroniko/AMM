program Project2;

{$APPTYPE CONSOLE}

uses
  SysUtils;

type masInt2 = array of array of Integer; // Объявляем новый тип - Двумерный массив целых чисел

var n: Integer; // Размерность матриц
    A: masInt2; // Объявляем экземпляр типа двумерного массива целых чисел для хранения матрицы А
    i, j: Integer; // Счетчики строк и столбцов
    summ: Integer;  // Количество удовлетворяющих сток

// Процедура подсчета количества строк, в которых элементы монотонно убывают или возрастают
procedure Monotonnost(A: masInt2)    ; // Передали массив в процедуру
var ik, jk: Integer; // счетчик по строкам матрицы а
    flag: Integer; // Флаг совпадения, если найдена строка, то 1, иначе 0
begin
  summ:= 0;
  // Запускаем цикл по строкам матрицы В (по фиксированному столбцу)
  for ik:= 0 to n-1 do
  begin
      flag:= 1;
      for jk:= 0 to n-2 do
      begin
        if A[ik,jk] <= a[ik,jk+1] then  // Если предыдущий элемент меньше настоящего
        begin
          flag:= 0; // То выставляем флаг в bcnby и
          Break; // выходим из цикла, т.к. дальше проверять нет смысла
        end;
      end;

      if (flag = 0)  then
      begin
         flag:= 1;
         for jk:= 0 to n-2 do
         begin
          if A[ik,jk] >= a[ik,jk+1] then  // Если предыдущий элемент меньше настоящего
          begin
               flag:= 0; // То выставляем флаг в bcnby и
               Break; // выходим из цикла, т.к. дальше проверять нет смысла
          end;
         end;
      end;
      summ:= summ + flag;
  end;
 end;



// тело основной программы:
begin
  { TODO -oUser -cConsole Main : Insert code here }
  // спашиваем у пользователя размерность матриц:
  write('Vvedite  n: ');
  Readln(n);  // Читаем n
  SetLength(A,n,n); // Выделяем память под динамический массив - матрицу А(задаем ему размерность n x m)
  Writeln; // Для красоты делаем отступ на одну строку
  // Говорим пользователю, чтобы он вводим элементы матрицы А построчно, разделяя элементы пробелами, а в конце строчки жал энтер:
  Writeln('Zapolnite kvadratnuyu matritcu razmernostuyu (n x n)' );
  Writeln; // Для красоты делаем отступ на одну строку
  // Запускаем цикл чтения и заполнения текущей матрицы:
  for i:=0 to n-1 do     // Цикл по строкам
  begin
    for j:=0 to n-1 do   // Цикл по столбцам
    begin
      read(A[i,j]);  // Читаем текущий элемент
    end;
  end;
  Writeln; // Для красоты делаем отступ на одну строку
  Writeln('massiv zapolnen: ' ); // Сообщаем, что все удачно прочитали и сформировали матрицу

    // Выводим матрицу на экран:
  for i:=0 to n-1 do     // Цикл по строкам
  begin
    for j:=0 to n-1 do   // Цикл по столбцам
    begin
      write(A[i,j], ' ');  // Выводим текущий элемент
    end;
    Writeln;
  end;

  Monotonnost(A); // Вызываем процедуру

  // Когда все посчитали, выводим результат на экран:
  Writeln;
  Writeln ('Kolichestvo strok s monotonnostuyu: ', summ);

  // осталось только дождаться ентера от пользователя:
  Readln; // Ждем подтверждения (продолжения)
  Readln; // Второй, т.к. первый может "проскочить"

end.
