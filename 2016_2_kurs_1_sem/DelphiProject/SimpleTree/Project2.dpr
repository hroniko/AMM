program Project2;

{$APPTYPE CONSOLE}

uses
  EsConsole in 'EsConsole.pas',
  MySimpleTree in 'MySimpleTree.pas';

// Модуль реализации простейшего дерева и функций работы с ним

var myFile: Text; // Переменная типа Text для асоцииации с текстовым файлом
    tmp: Integer;

    uk: tree_ptr;
    sum, count, srednee: Integer;

begin
  // Выводим информацию по задаче:
  Writeln('| ------------------------------------------------------- |');
  Writeln('| Бедарев А.А., ПММ, 2 курс, 1 семестр. Задание 2, Вар. 3 |');
  Writeln('| Найти и удалить (правым удалением) среднюю по значению  |');
  Writeln('| вершину из вершин дерева, у которых количество потомков |');
  Writeln('| в левом поддереве отличается от количества потомков в   |');
  Writeln('| правом поддереве на 1. Выполнить прямой (левый) обход   |');
  Writeln('| полученного дерева.                                     |');
  Writeln('| ------------------------------------------------------- |');
  Writeln;

  // 1) --------------- Чтение из файла и формироание дерева ------------------
  assign(myFile, 'in3.txt'); // Связываем файл с переменной myFile
  reset(myFile); // Открываем файл на чтение
  // Читаем каждый элемент файла сразу в дерево:
  tmp:= 0;
  while not Eof(myFile) do // Запускаем цикл чтения чисел из файла
    begin
      readln(myFile, tmp); // Считываем число во временную перемнную
      uk:= InsertKey(uk, tmp);  // и добавляем ее в дерево
    end;
  close(myFile); // Закрываем файл, освобождаем ресурсы
  // 1) -----------------------------------------------------------------------

  // 2) --------------- Вывод исходного дерева в консоль ----------------------
  Write('   Исходное дерево (прямой левый обход): ');
  FrontOrderLeft(uk); // Выводим на консоль прямым левым обходом наше дерево
  Writeln;

  WriteLn('   Структура: ');
  Writeln;
  PrintLeftTree(uk); // Печать пространственного дерева
  // 2) -----------------------------------------------------------------------

  // 3) ------------------ Выполнение требований задания ----------------------
  // Ищем и удаляем ПРАВЫМ удалением среднюю по значению
  uk:= FindMiddleAndRightRemove(uk);
  Writeln;
  // 3) -----------------------------------------------------------------------

  // 4) ------------- Вывод исправленного дерева в консоль --------------------
  Write('   Новое дерево (прямой левый обход): ');
  FrontOrderLeft(uk); // Выводим на консоль прямым левым обходом наше дерево
  Writeln;

  WriteLn('   Структура: ');
  Writeln;
  PrintLeftTree(uk); // Печать пространственного дерева
  // 4) -----------------------------------------------------------------------

  Readln;  // Ожидание нажатия клавиши и выход из программы
end.
