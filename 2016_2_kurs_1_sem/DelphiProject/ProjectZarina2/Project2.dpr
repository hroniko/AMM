program Project2;

{$APPTYPE CONSOLE}

uses
  SysUtils,  Math,
  MySimpleTree in 'MySimpleTree.pas';

// Модуль реализации простейшего дерева и функций работы с ним

var myFile: Text; // Переменная типа Text для асоцииации с текстовым файлом
    tmp: Integer;
    uk, uk2: tree_ptr;

begin
  // 1) --------------- Чтение из файла и формироание дерева ------------------
  assign(myFile, 'in1.txt');
  reset(myFile);
  // Читаем каждый элемент файла сразу в дерево:
  tmp:= 0;
  while not Eof(myFile) do // Запускаем цикл чтения чисел из файла
    begin
      readln(myFile, tmp); // Считываем число во временную перемнную
      uk:= InsertKey(uk, tmp);  // и добавляем ее в дерево
    end;
  close(myFile); // Закрываем файл, освобождаем ресурсы
  // 1) -----------------------------------------------------------------------

  // 2) --------------- Вывод исходного дерева в консоль ----------------------
  Write('Start Tree (Left-Print): ');
  FrontOrderLeft(uk); // Выводим на консоль прямым левым обходом наше дерево
  Writeln; Writeln;
  // 2) -----------------------------------------------------------------------

  // 3) ------------------ Выполнение требований задания ----------------------
  // Ищем и удаляем ПРАВЫМ удалением среднюю по значению
  uk2:= FindNodeBetween_MinLenWay(uk); // Ищем подходящий узел
  // 20) ОСНОВНАЯ Функция ПРАВОГО удаления элемента по его ключу
  uk:= RightRemoveKey(uk, uk2^.key); // Удаляем правым удалением его
  Writeln('Remove Node [', uk2^.key, '] with using Right-Delete ...'); Writeln;
  // 3) -----------------------------------------------------------------------

  // 4) ------------- Вывод исправленного дерева в консоль --------------------
  Write('Finish Tree (Left-Print): ');
  FrontOrderLeft(uk); // Выводим на консоль прямым левым обходом наше дерево
  Writeln;   Writeln;
  // 4) -----------------------------------------------------------------------

  Readln;  // Ожидание нажатия клавиши и выход из программы
end.
