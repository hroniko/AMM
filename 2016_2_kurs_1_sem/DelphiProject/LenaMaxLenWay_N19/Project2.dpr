{*
19. Найти все вершины, через которые проходят пути максимальной длины,
и удалить (правым удалением) самую высокую из них. Выполнить прямой
(левый) обход полученного дерева.

*}


program Project2;

{$APPTYPE CONSOLE}

uses
  EsConsole in 'EsConsole.pas',
  MySimpleTree in 'MySimpleTree.pas';

// Модуль реализации простейшего дерева и функций работы с ним

var myFile: Text; // Переменная типа Text для асоцииации с текстовым файлом
    tmp: Integer;

    uk, tmpNode: tree_ptr;
    sum, count, srednee: Integer;

begin

  // 1) --------------- Чтение из файла и формироание дерева ------------------
  assign(myFile, 'in5.txt'); // Связываем файл с переменной myFile
  reset(myFile); // Открываем файл на чтение
  // Читаем каждый элемент файла сразу в дерево:
  tmp:= 0;
  while not Eof(myFile) do // Запускаем цикл чтения чисел из файла
    begin
      readln(myFile, tmp); // Считываем число во временную перемнную
      uk:= InsertKey(uk, tmp);  // и добавляем ее в дерево
    end;
  close(myFile); // Закрываем файл, освобождаем ресурсы
  // 1) -----------------------------------------------------------------------

  // 2) --------------- Вывод исходного дерева в консоль ----------------------
  Write('Исходное дерево (прямой левый обход): ');
  //FrontOrderLeft(uk); // Выводим на консоль прямым левым обходом наше дерево
  Writeln;

  WriteLn('начальный вид дерева: ');
  Writeln;
  PrintLeftTree(uk); // Печать пространственного дерева


  // --------------- Вывод перестроенного дерева в консоль ----------------------
  tmpNode:= MaxLenMaxHeight(uk); //tmpNode:= Find_AllNode_Between_MaxLenWay(uk);
  Writeln('Удаляем правым удалением самую высокую вершину: ', tmpNode^.key);
  uk:= RightRemoveKey(uk, tmpNode^.key); // Удаляем ПРАВЫМ удалением эту
  WriteLn('Вид дерева после удаления: ');
  Writeln;
  PrintLeftTree(uk); // Печать пространственного дерева
  Writeln;

  Write('Прямой левый обход после удаления: ');
  FrontOrderLeft(uk); // Выводим на консоль прямым левым обходом наше новое дерево
  Writeln;


  Readln;  // Ожидание нажатия клавиши и выход из программы
end.
